# smolagent projects guidelines for AI

## basic project info

### main directory tree
.../botlab/agents/
                |__ .venv/
                |__ editor/
                |__ manager/
                |__ qaqc/
                |__ researcher/
                |__ utils/
                |   |__ gemini/
                |__ writer_critic/

### smolagent source code
- smolagent source code is located in *agents/.venv/lib/python3.11/site-packages/smolagents/*
    - search this dir for information relevant to how smolagents works
    - NEVER modify smolagent source code

### virtual environment
- *.venv/* is the poetry managed .venv
- all python scripts MUST be prefixed by `poetry run python `
    - e.g.  `poetry run python -m researcher.example`
            `poetry run python researcher/example.py`

### smolagent projects
- working directory is *agents/*
    - all python scripts MUST be run from *agents/* working dir:
        - e.g.  ```py
                cd agents
                poetry run python -m researcher.example
                ```
- *utils/* contains shared utils for the project
    - *gemini/* contains google gemini llm api utils
- *researcher/*, *manager/*, *writer_critic/*, and *editor/* are separate smolagent projects
    - smolagent project have these common files:
        - `__init__.py`
        - `agents.py` : project agents
        - `example.py` : example usages
        - `tools.py` : tools used by the agents
- *manager/* is a smolagent project for coordinating multiple agents
    - provides manager_agent which can orchestrate other agents
    - supports customizing agent descriptions and prompts via the --use-custom-prompts flag
    - custom configurations are defined in example.py
- *editor/* is a smolagent project for editing content with fact checking
    - contains the same common files as other projects
    - provides editor_agent which internally uses fact_checker_agent as a subagent
    - fact_checker_agent should not be used directly, only through editor_agent

### general rules
- ALWAYS use Do Not Repeat Yourself (DRY) principles, and avoid duplicating code
- NEVER install dependencies without asking first
- do not write new example or README files unless asked to
- before adding unsolicited features, ask if it's a good idea first
